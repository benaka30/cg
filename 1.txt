#include <stdio.h>
#include <stdlib.h>
#include <GL/glut.h>

int x1, Y1, x2, y2;
int n;
int endpoints[8][4];

void draw_pixel(int x, int y)
{
    glColor3f(0.0, 0.0, 1.0);
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
}

void draw_line(int x1, int Y1, int x2, int y2)
{
    int dx, dy, i, p;
    int incx, incy, inc1, inc2;
    int x, y;
    dx = x2 - x1;
    dy = y2 - Y1;
    if (dx < 0)
        dx = -dx;
    if (dy < 0)
        dy = -dy;
    incx = 1;
    incy = 1;
    x = x1;
    y = Y1;
    if (x2 < x1)
        incx = -1;
    if (y2 < Y1)
        incy = -1;
    if (dx > dy)
    {
        draw_pixel(x, y);
        inc1 = 2 * (dy - dx);
        inc2 = 2 * dy;
        p = 2 * dy - dx;
        for (i = 0; i < dx; i++)
        {
            if (p >= 0)
            {
                y += incy;
                p += inc1;
            }
            else
            {
                p += inc2;
            }
            x += incx;
            draw_pixel(x, y);
        }
    }
    else
    {
        draw_pixel(x, y);
        inc1 = 2 * (dx - dy);
        inc2 = 2 * dx;
        p = 2 * dx - dy;
        for (i = 0; i < dy; i++)
        {
            if (p >= 0)
            {
                x += incx;
                p += inc1;
            }
            else
            {
                p += inc2;
            }
            y += incy;
            draw_pixel(x, y);
        }
    }
}

void bresnham()
{
    int i;
    glClearColor(1.0, 1.0, 1.0, 1.0);
    glClear(GL_COLOR_BUFFER_BIT);
    for (i = 0; i < n; i++)
    {
        draw_line(endpoints[i][0], endpoints[i][1], endpoints[i][2], endpoints[i][3]);
        glColor3f(1.0, 0.0, 0.0);
        glBegin(GL_LINES);
        glVertex2i(endpoints[i][0], endpoints[i][1]);
        glVertex2i(endpoints[i][2], endpoints[i][3]);
        glEnd();
        glFlush();
    }

    glFlush();
}

void myInit()
{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0, 100, 0, 100);
    glMatrixMode(GL_MODELVIEW);
}

void main(int argc, char **argv)
{
    glutInit(&argc, argv);
    int i;
    printf("enter number of endpoints:\n");
    scanf("%d", &n);
    for (i = 0; i < n; i++)
    {
        printf("enter the endpoints of line %d\n", i + 1);
        scanf("%d %d %d %d", &endpoints[i][0], &endpoints[i][1], &endpoints[i][2], &endpoints[i][3]);
    }

    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowPosition(100, 100);
    glutInitWindowSize(500, 500);
    glutCreateWindow("bresenhamline drawing 1BI20CS055");
    glutDisplayFunc(bresnham);
    myInit();
    glutMainLoop();
}
